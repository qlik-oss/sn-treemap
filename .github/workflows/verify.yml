name: verify

on: push

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/yarn_install
      - run: yarn lint
      - run: yarn build
      - name: Run unit tests and publish to Code Climate
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        run: |
          ./test/bin/cc-test-reporter before-build
          yarn test --maxWorkers=2 --coverage
          ./test/bin/cc-test-reporter after-build --coverage-input-type lcov --exit-code $?
      - run: yarn playwright install --with-deps
      - run: yarn run test:rendering
        id: rendering
      - uses: actions/upload-artifact@v3
        if: ${{ failure() && steps.rendering.conclusion == 'failure' }}
        with:
          name: rendering-output
          path: |
            test/rendering/reports/html/
            test-results/
          retention-days: 3

      - run: yarn run test:integration
        id: integration
      - uses: actions/upload-artifact@v3
        if: ${{ failure() && steps.integration.conclusion == 'failure' }}
        with:
          name: integration-output
          path: |
            test/integration/reports/html/
            test-results/
          retention-days: 3

      - name: Prepare API Compliance
        run: |
          VER=`node ./tools/get-pre-next-version.js`
          echo "VER=${VER}" >> $GITHUB_ENV

          # update spec and spec version
          yarn version --new-version ${VER} --no-git-tag-version

          docker pull ghcr.io/qlik-download/api-compliance
          docker create -v /specs --name specs alpine:3.4 /bin/true
          docker cp ./api-spec/spec.json  specs:/specs

      - name: Run API Compliance
        run: |
          VER=${{ env.VER }}

          docker run --volumes-from specs \
            -e SPEC_PATHS="6ef0f3ff-3862-442b-8f18-789b5818bdd5@/specs/spec.json" \
            -e COMMIT_SHA="$GITHUB_SHA" \
            -e RELEASE_TAG="$VER" \
            -e PRE_RELEASE="true" \
            -e CREDENTIALS_S3_SECRETKEY="${{ secrets.APICULTURIST_S3 }}" \
            -e CREDENTIALS_GITHUB="${{ secrets.APICULTURIST_GITHUB }}" \
            -e CREDENTIALS_COLONY="${{ secrets.APICULTURIST_TOKEN }}" \
            ghcr.io/qlik-download/api-compliance
